// Code generated by MockGen. DO NOT EDIT.
// Source: Domain/Interfaces/otp_service_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
	gomock "github.com/golang/mock/gomock"
)

// MockOTPService is a mock of OTPService interface.
type MockOTPService struct {
	ctrl     *gomock.Controller
	recorder *MockOTPServiceMockRecorder
}

// MockOTPServiceMockRecorder is the mock recorder for MockOTPService.
type MockOTPServiceMockRecorder struct {
	mock *MockOTPService
}

// NewMockOTPService creates a new mock instance.
func NewMockOTPService(ctrl *gomock.Controller) *MockOTPService {
	mock := &MockOTPService{ctrl: ctrl}
	mock.recorder = &MockOTPServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOTPService) EXPECT() *MockOTPServiceMockRecorder {
	return m.recorder
}

// GenerateOTP mocks base method.
func (m *MockOTPService) GenerateOTP(token string) (string, *models.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateOTP", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*models.ErrorResponse)
	return ret0, ret1
}

// GenerateOTP indicates an expected call of GenerateOTP.
func (mr *MockOTPServiceMockRecorder) GenerateOTP(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateOTP", reflect.TypeOf((*MockOTPService)(nil).GenerateOTP), token)
}

// GetOTP mocks base method.
func (m *MockOTPService) GetOTP(otp_code string) (*models.URL, *models.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOTP", otp_code)
	ret0, _ := ret[0].(*models.URL)
	ret1, _ := ret[1].(*models.ErrorResponse)
	return ret0, ret1
}

// GetOTP indicates an expected call of GetOTP.
func (mr *MockOTPServiceMockRecorder) GetOTP(otp_code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOTP", reflect.TypeOf((*MockOTPService)(nil).GetOTP), otp_code)
}

// RemoveOTP mocks base method.
func (m *MockOTPService) RemoveOTP(otp_code string) *models.ErrorResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveOTP", otp_code)
	ret0, _ := ret[0].(*models.ErrorResponse)
	return ret0
}

// RemoveOTP indicates an expected call of RemoveOTP.
func (mr *MockOTPServiceMockRecorder) RemoveOTP(otp_code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveOTP", reflect.TypeOf((*MockOTPService)(nil).RemoveOTP), otp_code)
}
