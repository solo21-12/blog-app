// Code generated by MockGen. DO NOT EDIT.
// Source: Domain/Interfaces/jwt_service_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
	gomock "github.com/golang/mock/gomock"
)

// MockJwtService is a mock of JwtService interface.
type MockJwtService struct {
	ctrl     *gomock.Controller
	recorder *MockJwtServiceMockRecorder
}

// MockJwtServiceMockRecorder is the mock recorder for MockJwtService.
type MockJwtServiceMockRecorder struct {
	mock *MockJwtService
}

// NewMockJwtService creates a new mock instance.
func NewMockJwtService(ctrl *gomock.Controller) *MockJwtService {
	mock := &MockJwtService{ctrl: ctrl}
	mock.recorder = &MockJwtServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtService) EXPECT() *MockJwtServiceMockRecorder {
	return m.recorder
}

// CreateAccessToken mocks base method.
func (m *MockJwtService) CreateAccessToken(user models.User, expTime int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccessToken", user, expTime)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccessToken indicates an expected call of CreateAccessToken.
func (mr *MockJwtServiceMockRecorder) CreateAccessToken(user, expTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccessToken", reflect.TypeOf((*MockJwtService)(nil).CreateAccessToken), user, expTime)
}

// CreateRefreshToken mocks base method.
func (m *MockJwtService) CreateRefreshToken(user models.User, expTime int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRefreshToken", user, expTime)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRefreshToken indicates an expected call of CreateRefreshToken.
func (mr *MockJwtServiceMockRecorder) CreateRefreshToken(user, expTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRefreshToken", reflect.TypeOf((*MockJwtService)(nil).CreateRefreshToken), user, expTime)
}

// CreateURLToken mocks base method.
func (m *MockJwtService) CreateURLToken(user models.User, expTime int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateURLToken", user, expTime)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateURLToken indicates an expected call of CreateURLToken.
func (mr *MockJwtServiceMockRecorder) CreateURLToken(user, expTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateURLToken", reflect.TypeOf((*MockJwtService)(nil).CreateURLToken), user, expTime)
}

// ValidateAuthHeader mocks base method.
func (m *MockJwtService) ValidateAuthHeader(authHeader string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAuthHeader", authHeader)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateAuthHeader indicates an expected call of ValidateAuthHeader.
func (mr *MockJwtServiceMockRecorder) ValidateAuthHeader(authHeader interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAuthHeader", reflect.TypeOf((*MockJwtService)(nil).ValidateAuthHeader), authHeader)
}

// ValidateToken mocks base method.
func (m *MockJwtService) ValidateToken(tokenStr string) (*models.JWTCustome, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", tokenStr)
	ret0, _ := ret[0].(*models.JWTCustome)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJwtServiceMockRecorder) ValidateToken(tokenStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJwtService)(nil).ValidateToken), tokenStr)
}

// ValidateURLToken mocks base method.
func (m *MockJwtService) ValidateURLToken(tokenStr string) (*models.URLTokenCustom, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateURLToken", tokenStr)
	ret0, _ := ret[0].(*models.URLTokenCustom)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateURLToken indicates an expected call of ValidateURLToken.
func (mr *MockJwtServiceMockRecorder) ValidateURLToken(tokenStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateURLToken", reflect.TypeOf((*MockJwtService)(nil).ValidateURLToken), tokenStr)
}
