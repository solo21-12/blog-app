// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	dtos "github.com/aait.backend.g5.main/backend/Domain/DTOs"

	mock "github.com/stretchr/testify/mock"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
)

// UserProfileUpdateUsecase is an autogenerated mock type for the UserProfileUpdateUsecase type
type UserProfileUpdateUsecase struct {
	mock.Mock
}

// UpdateUserProfile provides a mock function with given fields: ctx, userID, user
func (_m *UserProfileUpdateUsecase) UpdateUserProfile(ctx context.Context, userID string, user *dtos.ProfileUpdateRequest) *models.ErrorResponse {
	ret := _m.Called(ctx, userID, user)

	var r0 *models.ErrorResponse
	if rf, ok := ret.Get(0).(func(context.Context, string, *dtos.ProfileUpdateRequest) *models.ErrorResponse); ok {
		r0 = rf(ctx, userID, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ErrorResponse)
		}
	}

	return r0
}

type mockConstructorTestingTNewUserProfileUpdateUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserProfileUpdateUsecase creates a new instance of UserProfileUpdateUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserProfileUpdateUsecase(t mockConstructorTestingTNewUserProfileUpdateUsecase) *UserProfileUpdateUsecase {
	mock := &UserProfileUpdateUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
