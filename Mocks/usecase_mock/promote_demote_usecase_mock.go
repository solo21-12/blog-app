// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
)

// PromoteDemoteUserUsecase is an autogenerated mock type for the PromoteDemoteUserUsecase type
type PromoteDemoteUserUsecase struct {
	mock.Mock
}

// DemoteUser provides a mock function with given fields: ctx, userID
func (_m *PromoteDemoteUserUsecase) DemoteUser(ctx context.Context, userID string) *models.ErrorResponse {
	ret := _m.Called(ctx, userID)

	var r0 *models.ErrorResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.ErrorResponse); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ErrorResponse)
		}
	}

	return r0
}

// PromoteUser provides a mock function with given fields: ctx, userID
func (_m *PromoteDemoteUserUsecase) PromoteUser(ctx context.Context, userID string) *models.ErrorResponse {
	ret := _m.Called(ctx, userID)

	var r0 *models.ErrorResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.ErrorResponse); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ErrorResponse)
		}
	}

	return r0
}

type mockConstructorTestingTNewPromoteDemoteUserUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewPromoteDemoteUserUsecase creates a new instance of PromoteDemoteUserUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPromoteDemoteUserUsecase(t mockConstructorTestingTNewPromoteDemoteUserUsecase) *PromoteDemoteUserUsecase {
	mock := &PromoteDemoteUserUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
