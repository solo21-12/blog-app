// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
)

// SignupUsecase is an autogenerated mock type for the SignupUsecase type
type SignupUsecase struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: ctx, user
func (_m *SignupUsecase) CreateUser(ctx context.Context, user *models.User) *models.ErrorResponse {
	ret := _m.Called(ctx, user)

	var r0 *models.ErrorResponse
	if rf, ok := ret.Get(0).(func(context.Context, *models.User) *models.ErrorResponse); ok {
		r0 = rf(ctx, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ErrorResponse)
		}
	}

	return r0
}

type mockConstructorTestingTNewSignupUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewSignupUsecase creates a new instance of SignupUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSignupUsecase(t mockConstructorTestingTNewSignupUsecase) *SignupUsecase {
	mock := &SignupUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
