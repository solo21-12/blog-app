// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/aait.backend.g5.main/backend/Domain/Models"
)

// RefreshUsecase is an autogenerated mock type for the RefreshUsecase type
type RefreshUsecase struct {
	mock.Mock
}

// RefreshToken provides a mock function with given fields: c, userID, refreshToken
func (_m *RefreshUsecase) RefreshToken(c context.Context, userID string, refreshToken string) (string, *models.ErrorResponse) {
	ret := _m.Called(c, userID, refreshToken)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string) string); ok {
		r0 = rf(c, userID, refreshToken)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 *models.ErrorResponse
	if rf, ok := ret.Get(1).(func(context.Context, string, string) *models.ErrorResponse); ok {
		r1 = rf(c, userID, refreshToken)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*models.ErrorResponse)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewRefreshUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewRefreshUsecase creates a new instance of RefreshUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRefreshUsecase(t mockConstructorTestingTNewRefreshUsecase) *RefreshUsecase {
	mock := &RefreshUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
